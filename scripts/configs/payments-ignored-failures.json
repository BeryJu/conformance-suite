[
    {
        "test-name": "payments-api-qres-good-phone-number-proxy-test",
        "variant": "*",
        "configuration-filename": "./scripts/configs/generated-payment-config.json",
        "current-block": "Validate response",
        "condition": "ChuckWarning",
        "expected-result": "failure",
        "comment": "mock bank bank is not fully compliant"
    },
    {
        "test-name": "payments-api-qres-wrong-amount-proxy-test",
        "variant": "*",
        "configuration-filename": "./scripts/configs/generated-payment-config.json",
        "current-block": "Validate response",
        "condition": "ChuckWarning",
        "expected-result": "failure",
        "comment": "not currently possible to test against mock bank"
    },
    {
        "test-name": "payments-api-qres-mismatched-consent-payment-test",
        "variant": "*",
        "configuration-filename": "./scripts/configs/generated-payment-config.json",
        "current-block": "Validate response",
        "condition": "VerifyErrorIfPixPostFailsOnQres",
        "expected-result": "failure",
        "comment": "Mock bank does not return the correct error"
    },
    {
        "test-name": "payments-api-fapi-testing",
        "variant": "*",
        "configuration-filename": "./scripts/configs/generated-payment-config.json",
        "current-block": "Try Client1's MTLS client certificate with Client2's access token",
        "condition": "ResourceErrorMetaValidator",
        "expected-result": "failure",
        "comment": "Mock bank does not have requestDateTime field in the error response causing test failure"
    },
        {
        "test-name": "payments-consents-json-accept-header-jwt-returned-test",
        "variant": "*",
        "configuration-filename": "./scripts/configs/generated-payment-config.json",
        "current-block": "Setting date to today",
        "condition": "EnsureResponseCodeWas200",
        "expected-result": "failure",
        "comment": "Mock bank does not return correct response for a fetch in Payments Consents with content-type application/json"
    }
]
