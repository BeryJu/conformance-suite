package net.openid.conformance.openbanking_brasil.productsNServices;

import com.google.common.collect.Sets;
import net.openid.conformance.util.SetUtils;
import net.openid.conformance.util.field.StringField;

import java.util.Set;

public class ProductNServicesCommonFields {

	public static final Set<String> CURRENCY = Sets.newHashSet("AFN", "ALL", "DZD", "USD", "EUR", "AOA", "XCD", "XCD", "ARS", "AMD", "AWG", "AUD", "EUR", "AZN", "BSD", "BHD", "BDT", "BBD", "BYN", "EUR", "BZD", "XOF", "BMD", "BTN", "BOB", "BOV", "USD", "BAM", "BWP", "NOK", "BRL", "USD", "BND", "BGN", "XOF", "BIF", "CVE", "KHR", "XAF", "CAD", "KYD", "XAF", "XAF", "CLF", "CLP", "CNY", "AUD", "AUD", "COP", "COU", "KMF", "CDF", "XAF", "NZD", "CRC", "HRK", "CUC", "CUP", "ANG", "EUR", "CZK", "XOF", "DKK", "DJF", "XCD", "DOP", "USD", "EGP", "SVC", "USD", "XAF", "ERN", "EUR", "ETB", "EUR", "FKP", "DKK", "FJD", "EUR", "EUR", "EUR", "XPF", "EUR", "XAF", "GMD", "GEL", "EUR", "GHS", "GIP", "EUR", "DKK", "XCD", "EUR", "USD", "GTQ", "GBP", "GNF", "XOF", "GYD", "HTG", "USD", "AUD", "EUR", "HNL", "HKD", "HUF", "ISK", "INR", "IDR", "XDR", "IRR", "IQD", "EUR", "GBP", "ILS", "EUR", "JMD", "JPY", "GBP", "JOD", "KZT", "KES", "AUD", "KPW", "KRW", "KWD", "KGS", "LAK", "EUR", "LBP", "LSL", "ZAR", "LRD", "LYD", "CHF", "EUR", "EUR", "MOP", "MGA", "MWK", "MYR", "MVR", "XOF", "EUR", "USD", "EUR", "MRU", "MUR", "EUR", "XUA", "MXN", "MXV", "USD", "MDL", "EUR", "MNT", "EUR", "XCD", "MAD", "MZN", "MMK", "NAD", "ZAR", "AUD", "NPR", "EUR", "XPF", "NZD", "NIO", "XOF", "NGN", "NZD", "AUD", "USD", "NOK", "OMR", "PKR", "USD", "PAB", "USD", "PGK", "PYG", "PEN", "PHP", "NZD", "PLN", "EUR", "USD", "QAR", "MKD", "RON", "RUB", "RWF", "EUR", "EUR", "SHP", "XCD", "XCD", "EUR", "EUR", "XCD", "WST", "EUR", "STN", "SAR", "XOF", "RSD", "SCR", "SLL", "SGD", "ANG", "XSU", "EUR", "EUR", "SBD", "SOS", "ZAR", "SSP", "EUR", "LKR", "SDG", "SRD", "NOK", "SZL", "SEK", "CHE", "CHF", "CHW", "SYP", "TWD", "TJS", "TZS", "THB", "USD", "XOF", "NZD", "TOP", "TTD", "TND", "TRY", "TMT", "USD", "AUD", "UGX", "UAH", "AED", "GBP", "USD", "USD", "USN", "UYI", "UYU", "UZS", "VUV", "VEF", "VND", "USD", "USD", "XPF", "MAD", "YER", "ZMW", "ZWL");
	public static final Set<String> EXCLUDED_RISKS = Sets.newHashSet("ATO_RECONHECIMENTO_PERIGOSO", "ATO_ILICITO_DOLOSO_PRATICADO_SEGURADO", "OPERACOES_DE_GUERRA", "FURACOES_CICLONES_TERREMOTOS", "MATERIAL_NUCLEAR", "DOENCAS_LESOES_PREEXISTENTES", "EPIDEMIAS_PANDEMIAS", "SUICIDIO", "ATO_ILICITO_DOLOSO_PRATICADO_CONTROLADOR", "OUTROS");
	public static final Set<String> COUNTRY_250 = SetUtils.createSet("ANDORRA, EMIRADOS_ARABES_UNIDOS, AFEGANISTAO, ANTIGUA_E_BARBUDA, ANGUILLA, ALBANIA, " +
		"ARMENIA, ANTILHAS_HOLANDESAS, ANGOLA, ANTARTIDA, ARGENTINA, SAMOA_AMERICANA, AUSTRIA, AUSTRALIA, ARUBA, ILHAS_ALAND, AZERBAIJAO, BOSNIA_HERZEGOVINA, BARBADOS, " +
		"BANGLADESH, BELGICA, BURKINA_FASSO, BULGARIA, BAHREIN, BURUNDI, BENIN, SAO_BARTOLOMEU, BERMUDAS, BRUNEI, BOLIVIA, BONAIRE_SINT_EUSTATIUS_E_SABA, " +
		"BRASIL, BAHAMAS, BUTAO, ILHA_BOUVET_TERRITORIO_DA_NORUEGA, BOTSUANA, BELARUS, BELIZE, CANADA, ILHAS_COCOS, REPUBLICA_DEMOCRATICA_DO_CONGO_EX_ZAIRE, " +
		"REPUBLICA_CENTRO_AFRICANA, CONGO, SUICA, COSTA_DO_MARFIM, ILHAS_COOK, CHILE, CAMAROES, CHINA, COLOMBIA, COSTA_RICA, CUBA, CABO_VERDE, CURACAO, ILHA_NATAL, " +
		"CHIPRE, REPUBLICA_TCHECA, ALEMANHA, DJIBUTI, DINAMARCA, DOMINICA, REPUBLICA_DOMINICANA, ARGELIA, EQUADOR, ESTONIA, EGITO, SAARA_OCIDENTAL_EX_SPANISH_SAHARA, " +
		"ERITREIA, ESPANHA, ETIOPIA, FINLANDIA, FIJI, ILHAS_FALKLAND_MALVINAS, MICRONESIA, ILHAS_FAROES, FRANCA, GABAO, GRA_BRETANHA_REINO_UNIDO_UK, GRANADA, GEORGIA, " +
		"GUIANA_FRANCESA, GUERNSEY, GANA, GIBRALTAR, GROELANDIA, GAMBIA, GUINE, GUADALUPE, GUINE_EQUATORIAL, GRECIA, ILHAS_GEORGIA_DO_SUL_E_SANDWICH_DO_SUL, GUATEMALA, " +
		"GUAM_TERRITORIO_DOS_ESTADOS_UNIDOS, GUINE_BISSAU, GUIANA, HONG_KONG, ILHAS_HEARD_E_MCDONALD_TERRITORIO_DA_AUSTRALIA, HONDURAS, CROACIA_HRVATSKA, HAITI, HUNGRIA, " +
		"INDONESIA, IRLANDA, ISRAEL, ILHA_DO_HOMEM, INDIA, TERRITORIO_BRITANICO_DO_OCEANO_INDICO, IRAQUE, IRA, ISLANDIA, ITALIA, JERSEY, JAMAICA, JORDANIA, JAPAO, KENIA, " +
		"KYRGYZSTAN, CAMBOJA, KIRIBATI, ILHAS_COMORES, SAO_CRISTOVAO_E_NEVIS, COREIA_DO_NORTE, COREIA_DO_SUL, KUAIT, ILHAS_CAYMAN, CAZAQUISTAO, LAOS, LIBANO, SANTA_LUCIA, " +
		"LIECHTENSTEIN, SRI_LANKA, LIBERIA, LESOTO, LITUANIA, LUXEMBURGO, LATVIA, LIBIA, MARROCOS, MONACO, MOLDOVA, MONTENEGRO, SAO_MARTIM, MADAGASCAR, ILHAS_MARSHALL, " +
		"MACEDONIA_REPUBLICA_YUGOSLAVA, MALI, MYANMA_EX_BURMA, MONGOLIA, MACAU, ILHAS_MARIANAS_DO_NORTE, MARTINICA, MAURITANIA, MONTSERRAT, MALTA, MAURICIO, MALDIVAS, MALAUI, " +
		"MEXICO, MALASIA, MOCAMBIQUE, NAMIBIA, NOVA_CALEDONIA, NIGER, ILHAS_NORFOLK, NIGERIA, NICARAGUA, HOLANDA, NORUEGA, NEPAL, NAURU, NIUE, NOVA_ZELANDIA, OMA, PANAMA, PERU, " +
		"POLINESIA_FRANCESA, PAPUA_NOVA_GUINE, FILIPINAS, PAQUISTAO, POLONIA, ST_PIERRE_AND_MIQUELON, ILHA_PITCAIRN, PORTO_RICO, TERRITORIOS_PALESTINOS_OCUPADOS, PORTUGAL, " +
		"PALAU, PARAGUAI, QATAR, ILHA_REUNIAO, ROMENIA, SERVIA, FEDERACAO_RUSSA, RUANDA, ARABIA_SAUDITA, ILHAS_SOLOMAO, ILHAS_SEYCHELLES, SUDAO, SUECIA, CINGAPURA, " +
		"SANTA_HELENA, ESLOVENIA, ILHAS_SVALBARD_E_JAN_MAYEN, ESLOVAQUIA, SERRA_LEOA, SAN_MARINO, SENEGAL, SOMALIA, SURINAME, SUDAO_DO_SUL, SAO_TOME_E_PRINCIPE, " +
		"EL_SALVADOR, SAO_MARTINHO_PARTE_HOLANDESA, SIRIA, SUAZILANDIA, ILHAS_TURKS_E_CAICOS, CHADE, TERRITORIOS_DO_SUL_DA_FRANCA, TOGO, TAILANDIA, TADJIQUISTAO, " +
		"ILHAS_TOKELAU, TIMOR_LESTE_EX_EAST_TIMOR, TURCOMENISTAO, TUNISIA, TONGA, TURQUIA, TRINIDAD_AND_TOBAGO, TUVALU, TAIWAN, TANZANIA, UCRANIA, UGANDA, " +
		"ILHAS_MENORES_DOS_ESTADOS_UNIDOS, ESTADOS_UNIDOS, URUGUAI, UZBEQUISTAO, VATICANO, SAINT_VINCENTE_E_GRANADINAS, VENEZUELA, ILHAS_VIRGENS_INGLATERRA, " +
		"ILHAS_VIRGENS_ESTADOS_UNIDOS, VIETNAM, VANUATU, ILHAS_WALLIS_E_FUTUNA, SAMOA_OCIDENTAL, IEMEN, MAYOTTE, AFRICA_DO_SUL, ZAMBIA, ZIMBABUE");

	public static StringField.Builder name() {
		return new StringField
			.Builder("name");
	}

	public static StringField.Builder code() {
		return new StringField
			.Builder("code");
	}

	public static StringField.Builder cnpjNumber() {
		return new StringField
			.Builder("cnpjNumber");
	}
}
